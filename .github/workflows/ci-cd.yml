name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: coverage/

  build:
    needs: test
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub (optional)
        if: github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ecommerce-app:latest .
          docker tag ecommerce-app:latest ecommerce-app:${{ github.sha }}

      - name: Push to Docker Hub (optional)
        if: github.event_name == 'push'
        run: |
          docker push ecommerce-app:latest
          docker push ecommerce-app:${{ github.sha }}

      - name: Save Docker image as artifact
        run: docker save ecommerce-app:latest | gzip > ecommerce-app.tar.gz

      - name: Upload Docker image
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: ecommerce-app.tar.gz
